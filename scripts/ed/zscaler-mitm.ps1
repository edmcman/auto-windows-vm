# Base64-encoded Zscaler Root Certificate
$Base64Cert = @"
LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUUwekNDQTd1Z0F3SUJBZ0lKQU51K21DMkp0
M3VUTUEwR0NTcUdTSWIzRFFFQkN3VUFNSUdoTVFzd0NRWUQKVlFRR0V3SlZVekVUTUJFR0ExVUVD
Qk1LUTJGc2FXWnZjbTVwWVRFUk1BOEdBMVVFQnhNSVUyRnVJRXB2YzJVeApGVEFUQmdOVkJBb1RE
RnB6WTJGc1pYSWdTVzVqTGpFVk1CTUdBMVVFQ3hNTVduTmpZV3hsY2lCSmJtTXVNUmd3CkZnWURW
UVFERXc5YWMyTmhiR1Z5SUZKdmIzUWdRMEV4SWpBZ0Jna3Foa2lHOXcwQkNRRVdFM04xY0hCdmNu
UkEKZW5OallXeGxjaTVqYjIwd0hoY05NVFF4TWpFNU1EQXlOelUxV2hjTk5ESXdOVEEyTURBeU56
VTFXakNCb1RFTApNQWtHQTFVRUJoTUNWVk14RXpBUkJnTlZCQWdUQ2tOaGJHbG1iM0p1YVdFeEVU
QVBCZ05WQkFjVENGTmhiaUJLCmIzTmxNUlV3RXdZRFZRUUtFd3hhYzJOaGJHVnlJRWx1WXk0eEZU
QVRCZ05WQkFzVERGcHpZMkZzWlhJZ1NXNWoKTGpFWU1CWUdBMVVFQXhNUFduTmpZV3hsY2lCU2Iy
OTBJRU5CTVNJd0lBWUpLb1pJaHZjTkFRa0JGaE56ZFhCdwpiM0owUUhwelkyRnNaWEl1WTI5dE1J
SUJJakFOQmdrcWhraUc5dzBCQVFFRkFBT0NBUThBTUlJQkNnS0NBUUVBCnFUN1NUU3haUlRnRUZG
ZjZkb0hhalNjMXZrNWptem1NNkJXdU9vMDQ0RXNhVGM5ZVZFVi9IakgvMURXelp0Y3IKZlRqK25p
MjA1YXBNVGxLQlczVVlSK2x5TEhROUZvWmlEWFlYSzhwb0tTVjUrVG0wVmxzLzVLYjhta2hWVnF2
NwpMZ1lFbXZFWTdIUFkraTFuRUdaQ2E0NlpYQ09vaEowbUJFdEI5SlZscERJTytuTjBoVU1BWVlk
WjFLWldDTU5mCjVKL2FUWmlTaHNvck4yQTM4aVNPaGRkK21jUk00aU5MM2dzTHU5OVhoS25ScUtv
SGVIODNsVmRmdTFYQmVvUXoKejVWNmdBM2tiUnZoRHdvSWxUQmVNYTVsNHlSZEpBZmRwa2JGenFp
d1NnTmRoYnhUSG5ZWW9yRHpLZnIyckVGTQpkc01VMERIZGVBWmY3MTErMUN1bnVRSURBUUFCbzRJ
QkNqQ0NBUVl3SFFZRFZSME9CQllFRkxtMzNVck53dzRNCmhwMWQzK3djQkduRlRwamZNSUhXQmdO
VkhTTUVnYzR3Z2N1QUZMbTMzVXJOd3c0TWhwMWQzK3djQkduRlRwamYKb1lHbnBJR2tNSUdoTVFz
d0NRWURWUVFHRXdKVlV6RVRNQkVHQTFVRUNCTUtRMkZzYVdadmNtNXBZVEVSTUE4RwpBMVVFQnhN
SVUyRnVJRXB2YzJVeEZUQVRCZ05WQkFvVERGcHpZMkZzWlhJZ1NXNWpMakVWTUJNR0ExVUVDeE1N
ClduTmpZV3hsY2lCSmJtTXVNUmd3RmdZRFZRUURFdzlhYzJOaGJHVnlJRkp2YjNRZ1EwRXhJakFn
QmdrcWhraUcKOXcwQkNRRVdFM04xY0hCdmNuUkFlbk5qWVd4bGNpNWpiMjJDQ1FEYnZwZ3RpYmQ3
a3pBTUJnTlZIUk1FQlRBRApBUUgvTUEwR0NTcUdTSWIzRFFFQkN3VUFBNElCQVFBdzBOZEpoOHcz
TnNKdTRLSHVWWlVybVpnSW9oblRtMGorClJUbVlROUlLQS9wdnhBY0E2SzFpL0xPK0J0K3RDWCtD
MHl4cUI4cXp1bys0dkF6b1k1SkVCaHloQmhmMXVLK1AKL1dWV0ZaTi8raFRncFNiWmd6VUVuV1FH
MmdPVmQyNG1zZXgrMFNyN2h5cjl2bjZPdWVIK2pqK3ZDTWlBbTUrdQprZDdsTHZKc0J1M0FPM2pH
V1ZMeVBrUzNpNkdmK3J3QXAxT3NScnYzV25ia1ljRmY5eGp1YWY0ejBoUkNyTE4yCnhGTmphdnhy
SG1zSDhqUEhWdmdjMVZEME9wamEwbC9CUlZhdVRyVWFvVzZ0RSt3Rkc1ckVjUEdTODBqakhLNFMK
cEI1aURqMm1VWkgxVDhsell0dVp5MFpQaXJ4bXRzazMxMzUrQ0tOYTJPQ0FoaEZqRTB4ZAotLS0t
LUVORCBDRVJUSUZJQ0FURS0tLS0t
"@

# Decode the Base64-encoded certificate
$CertBytes = [Convert]::FromBase64String($Base64Cert)

# Write the certificate to a temporary file
$TempCertPath = [System.IO.Path]::Combine($env:TEMP, "ZscalerRootCertificate.crt")
[System.IO.File]::WriteAllBytes($TempCertPath, $CertBytes)

# Import the certificate into the Trusted Root Certification Authorities store
try {
    Write-Host "Importing certificate..."
    Import-Certificate -FilePath $TempCertPath -CertStoreLocation Cert:\LocalMachine\Root | Out-Null
    Write-Host "Certificate imported successfully."
} catch {
    Write-Error "Failed to import certificate: $_"
} finally {
    # Clean up the temporary file
    if (Test-Path $TempCertPath) {
        Remove-Item $TempCertPath -Force
    }
}